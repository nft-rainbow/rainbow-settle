// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: settle.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{0}
}

type UserBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       uint32  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Balance      float32 `protobuf:"fixed32,2,opt,name=Balance,proto3" json:"Balance,omitempty"`
	ArrearsQuota float32 `protobuf:"fixed32,3,opt,name=ArrearsQuota,proto3" json:"ArrearsQuota,omitempty"`
	CfxPrice     float32 `protobuf:"fixed32,4,opt,name=CfxPrice,proto3" json:"CfxPrice,omitempty"`
}

func (x *UserBalance) Reset() {
	*x = UserBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBalance) ProtoMessage() {}

func (x *UserBalance) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBalance.ProtoReflect.Descriptor instead.
func (*UserBalance) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{1}
}

func (x *UserBalance) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserBalance) GetBalance() float32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *UserBalance) GetArrearsQuota() float32 {
	if x != nil {
		return x.ArrearsQuota
	}
	return 0
}

func (x *UserBalance) GetCfxPrice() float32 {
	if x != nil {
		return x.CfxPrice
	}
	return 0
}

type UserApiQuotas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items map[string]*UserApiQuota `protobuf:"bytes,1,rep,name=Items,proto3" json:"Items,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UserApiQuotas) Reset() {
	*x = UserApiQuotas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserApiQuotas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserApiQuotas) ProtoMessage() {}

func (x *UserApiQuotas) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserApiQuotas.ProtoReflect.Descriptor instead.
func (*UserApiQuotas) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{2}
}

func (x *UserApiQuotas) GetItems() map[string]*UserApiQuota {
	if x != nil {
		return x.Items
	}
	return nil
}

type UserApiQuota struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        uint32 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CostType      string `protobuf:"bytes,2,opt,name=CostType,proto3" json:"CostType,omitempty"`
	CountReset    uint32 `protobuf:"varint,3,opt,name=CountReset,proto3" json:"CountReset,omitempty"`
	CountRollover uint32 `protobuf:"varint,4,opt,name=CountRollover,proto3" json:"CountRollover,omitempty"`
}

func (x *UserApiQuota) Reset() {
	*x = UserApiQuota{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserApiQuota) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserApiQuota) ProtoMessage() {}

func (x *UserApiQuota) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserApiQuota.ProtoReflect.Descriptor instead.
func (*UserApiQuota) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{3}
}

func (x *UserApiQuota) GetUserID() uint32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserApiQuota) GetCostType() string {
	if x != nil {
		return x.CostType
	}
	return ""
}

func (x *UserApiQuota) GetCountReset() uint32 {
	if x != nil {
		return x.CountReset
	}
	return 0
}

func (x *UserApiQuota) GetCountRollover() uint32 {
	if x != nil {
		return x.CountRollover
	}
	return 0
}

type WxOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeUrl       *string `protobuf:"bytes,1,opt,name=CodeUrl,proto3,oneof" json:"CodeUrl,omitempty"`
	H5Url         *string `protobuf:"bytes,2,opt,name=H5Url,proto3,oneof" json:"H5Url,omitempty"`
	TradeNo       *string `protobuf:"bytes,3,opt,name=TradeNo,proto3,oneof" json:"TradeNo,omitempty"`             //`json:"trade_no,omitempty"`
	TradeProvider *string `protobuf:"bytes,4,opt,name=TradeProvider,proto3,oneof" json:"TradeProvider,omitempty"` //  `json:"trade_provider,omitempty"`
	TradeState    *string `protobuf:"bytes,5,opt,name=TradeState,proto3,oneof" json:"TradeState,omitempty"`       // `json:"trade_state,omitempty"`
}

func (x *WxOrder) Reset() {
	*x = WxOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxOrder) ProtoMessage() {}

func (x *WxOrder) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxOrder.ProtoReflect.Descriptor instead.
func (*WxOrder) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{4}
}

func (x *WxOrder) GetCodeUrl() string {
	if x != nil && x.CodeUrl != nil {
		return *x.CodeUrl
	}
	return ""
}

func (x *WxOrder) GetH5Url() string {
	if x != nil && x.H5Url != nil {
		return *x.H5Url
	}
	return ""
}

func (x *WxOrder) GetTradeNo() string {
	if x != nil && x.TradeNo != nil {
		return *x.TradeNo
	}
	return ""
}

func (x *WxOrder) GetTradeProvider() string {
	if x != nil && x.TradeProvider != nil {
		return *x.TradeProvider
	}
	return ""
}

func (x *WxOrder) GetTradeState() string {
	if x != nil && x.TradeState != nil {
		return *x.TradeState
	}
	return ""
}

type DepositOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          uint32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserId      uint32  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Amount      float32 `protobuf:"fixed32,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Type        uint32  `protobuf:"varint,4,opt,name=Type,proto3" json:"Type,omitempty"`
	Status      uint32  `protobuf:"varint,5,opt,name=Status,proto3" json:"Status,omitempty"`
	Description string  `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	TradeNo     string  `protobuf:"bytes,7,opt,name=TradeNo,proto3" json:"TradeNo,omitempty"`
	Meta        string  `protobuf:"bytes,8,opt,name=Meta,proto3" json:"Meta,omitempty"`
}

func (x *DepositOrder) Reset() {
	*x = DepositOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositOrder) ProtoMessage() {}

func (x *DepositOrder) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositOrder.ProtoReflect.Descriptor instead.
func (*DepositOrder) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{5}
}

func (x *DepositOrder) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *DepositOrder) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DepositOrder) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DepositOrder) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DepositOrder) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DepositOrder) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DepositOrder) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *DepositOrder) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

type UserID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *UserID) Reset() {
	*x = UserID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserID) ProtoMessage() {}

func (x *UserID) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserID.ProtoReflect.Descriptor instead.
func (*UserID) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{6}
}

func (x *UserID) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *ID) Reset() {
	*x = ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ID) ProtoMessage() {}

func (x *ID) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ID.ProtoReflect.Descriptor instead.
func (*ID) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{7}
}

func (x *ID) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CmbDepositNoDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Bank   string `protobuf:"bytes,2,opt,name=Bank,proto3" json:"Bank,omitempty"`
	CardNo string `protobuf:"bytes,3,opt,name=CardNo,proto3" json:"CardNo,omitempty"`
}

func (x *CmbDepositNoDto) Reset() {
	*x = CmbDepositNoDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmbDepositNoDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmbDepositNoDto) ProtoMessage() {}

func (x *CmbDepositNoDto) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmbDepositNoDto.ProtoReflect.Descriptor instead.
func (*CmbDepositNoDto) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{8}
}

func (x *CmbDepositNoDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CmbDepositNoDto) GetBank() string {
	if x != nil {
		return x.Bank
	}
	return ""
}

func (x *CmbDepositNoDto) GetCardNo() string {
	if x != nil {
		return x.CardNo
	}
	return ""
}

type CmbDepositNo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserId       uint32 `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	UserName     string `protobuf:"bytes,3,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserBankNo   string `protobuf:"bytes,4,opt,name=UserBankNo,proto3" json:"UserBankNo,omitempty"`
	UserBankName string `protobuf:"bytes,5,opt,name=UserBankName,proto3" json:"UserBankName,omitempty"`
	CmbNo        string `protobuf:"bytes,6,opt,name=CmbNo,proto3" json:"CmbNo,omitempty"`
}

func (x *CmbDepositNo) Reset() {
	*x = CmbDepositNo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmbDepositNo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmbDepositNo) ProtoMessage() {}

func (x *CmbDepositNo) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmbDepositNo.ProtoReflect.Descriptor instead.
func (*CmbDepositNo) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{9}
}

func (x *CmbDepositNo) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CmbDepositNo) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CmbDepositNo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CmbDepositNo) GetUserBankNo() string {
	if x != nil {
		return x.UserBankNo
	}
	return ""
}

func (x *CmbDepositNo) GetUserBankName() string {
	if x != nil {
		return x.UserBankName
	}
	return ""
}

func (x *CmbDepositNo) GetCmbNo() string {
	if x != nil {
		return x.CmbNo
	}
	return ""
}

type DepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      uint32  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Amount      float32 `protobuf:"fixed32,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *DepositRequest) Reset() {
	*x = DepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositRequest) ProtoMessage() {}

func (x *DepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositRequest.ProtoReflect.Descriptor instead.
func (*DepositRequest) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{10}
}

func (x *DepositRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DepositRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DepositRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ModelsCmbRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccNbr    *string  `protobuf:"bytes,1,opt,name=AccNbr,proto3,oneof" json:"AccNbr,omitempty"`
	AutFlg    *string  `protobuf:"bytes,2,opt,name=AutFlg,proto3,oneof" json:"AutFlg,omitempty"`
	CcyNbr    *string  `protobuf:"bytes,3,opt,name=CcyNbr,proto3,oneof" json:"CcyNbr,omitempty"`
	CreatedAt *string  `protobuf:"bytes,4,opt,name=CreatedAt,proto3,oneof" json:"CreatedAt,omitempty"`
	DmaNam    *string  `protobuf:"bytes,5,opt,name=DmaNam,proto3,oneof" json:"DmaNam,omitempty"`
	DmaNbr    *string  `protobuf:"bytes,6,opt,name=DmaNbr,proto3,oneof" json:"DmaNbr,omitempty"`
	Id        *int32   `protobuf:"varint,7,opt,name=Id,proto3,oneof" json:"Id,omitempty"`
	NarInn    *string  `protobuf:"bytes,8,opt,name=NarInn,proto3,oneof" json:"NarInn,omitempty"`
	RpyAcc    *string  `protobuf:"bytes,9,opt,name=RpyAcc,proto3,oneof" json:"RpyAcc,omitempty"`
	RpyNam    *string  `protobuf:"bytes,10,opt,name=RpyNam,proto3,oneof" json:"RpyNam,omitempty"`
	TrxAmt    *float32 `protobuf:"fixed32,11,opt,name=TrxAmt,proto3,oneof" json:"TrxAmt,omitempty"`
	TrxDat    *string  `protobuf:"bytes,12,opt,name=TrxDat,proto3,oneof" json:"TrxDat,omitempty"`
	TrxDir    *string  `protobuf:"bytes,13,opt,name=TrxDir,proto3,oneof" json:"TrxDir,omitempty"`
	TrxNbr    *string  `protobuf:"bytes,14,opt,name=TrxNbr,proto3,oneof" json:"TrxNbr,omitempty"`
	TrxTim    *string  `protobuf:"bytes,15,opt,name=TrxTim,proto3,oneof" json:"TrxTim,omitempty"`
	TrxTxt    *string  `protobuf:"bytes,16,opt,name=TrxTxt,proto3,oneof" json:"TrxTxt,omitempty"`
}

func (x *ModelsCmbRecord) Reset() {
	*x = ModelsCmbRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelsCmbRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelsCmbRecord) ProtoMessage() {}

func (x *ModelsCmbRecord) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelsCmbRecord.ProtoReflect.Descriptor instead.
func (*ModelsCmbRecord) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{11}
}

func (x *ModelsCmbRecord) GetAccNbr() string {
	if x != nil && x.AccNbr != nil {
		return *x.AccNbr
	}
	return ""
}

func (x *ModelsCmbRecord) GetAutFlg() string {
	if x != nil && x.AutFlg != nil {
		return *x.AutFlg
	}
	return ""
}

func (x *ModelsCmbRecord) GetCcyNbr() string {
	if x != nil && x.CcyNbr != nil {
		return *x.CcyNbr
	}
	return ""
}

func (x *ModelsCmbRecord) GetCreatedAt() string {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return ""
}

func (x *ModelsCmbRecord) GetDmaNam() string {
	if x != nil && x.DmaNam != nil {
		return *x.DmaNam
	}
	return ""
}

func (x *ModelsCmbRecord) GetDmaNbr() string {
	if x != nil && x.DmaNbr != nil {
		return *x.DmaNbr
	}
	return ""
}

func (x *ModelsCmbRecord) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ModelsCmbRecord) GetNarInn() string {
	if x != nil && x.NarInn != nil {
		return *x.NarInn
	}
	return ""
}

func (x *ModelsCmbRecord) GetRpyAcc() string {
	if x != nil && x.RpyAcc != nil {
		return *x.RpyAcc
	}
	return ""
}

func (x *ModelsCmbRecord) GetRpyNam() string {
	if x != nil && x.RpyNam != nil {
		return *x.RpyNam
	}
	return ""
}

func (x *ModelsCmbRecord) GetTrxAmt() float32 {
	if x != nil && x.TrxAmt != nil {
		return *x.TrxAmt
	}
	return 0
}

func (x *ModelsCmbRecord) GetTrxDat() string {
	if x != nil && x.TrxDat != nil {
		return *x.TrxDat
	}
	return ""
}

func (x *ModelsCmbRecord) GetTrxDir() string {
	if x != nil && x.TrxDir != nil {
		return *x.TrxDir
	}
	return ""
}

func (x *ModelsCmbRecord) GetTrxNbr() string {
	if x != nil && x.TrxNbr != nil {
		return *x.TrxNbr
	}
	return ""
}

func (x *ModelsCmbRecord) GetTrxTim() string {
	if x != nil && x.TrxTim != nil {
		return *x.TrxTim
	}
	return ""
}

func (x *ModelsCmbRecord) GetTrxTxt() string {
	if x != nil && x.TrxTxt != nil {
		return *x.TrxTxt
	}
	return ""
}

type Pagenation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset uint32 `protobuf:"varint,1,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  uint32 `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *Pagenation) Reset() {
	*x = Pagenation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagenation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagenation) ProtoMessage() {}

func (x *Pagenation) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagenation.ProtoReflect.Descriptor instead.
func (*Pagenation) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{12}
}

func (x *Pagenation) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Pagenation) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type WxOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *WxOrderRequest) Reset() {
	*x = WxOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxOrderRequest) ProtoMessage() {}

func (x *WxOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxOrderRequest.ProtoReflect.Descriptor instead.
func (*WxOrderRequest) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{13}
}

func (x *WxOrderRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type RefundApiFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   uint32 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	CostType string `protobuf:"bytes,2,opt,name=CostType,proto3" json:"CostType,omitempty"`
	Count    uint32 `protobuf:"varint,3,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *RefundApiFeeRequest) Reset() {
	*x = RefundApiFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundApiFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundApiFeeRequest) ProtoMessage() {}

func (x *RefundApiFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundApiFeeRequest.ProtoReflect.Descriptor instead.
func (*RefundApiFeeRequest) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{14}
}

func (x *RefundApiFeeRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RefundApiFeeRequest) GetCostType() string {
	if x != nil {
		return x.CostType
	}
	return ""
}

func (x *RefundApiFeeRequest) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type BuySponsorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  uint32  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Amount  float32 `protobuf:"fixed32,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
	TxId    uint32  `protobuf:"varint,3,opt,name=TxId,proto3" json:"TxId,omitempty"`
	Address string  `protobuf:"bytes,4,opt,name=Address,proto3" json:"Address,omitempty"`
}

func (x *BuySponsorRequest) Reset() {
	*x = BuySponsorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuySponsorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuySponsorRequest) ProtoMessage() {}

func (x *BuySponsorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuySponsorRequest.ProtoReflect.Descriptor instead.
func (*BuySponsorRequest) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{15}
}

func (x *BuySponsorRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BuySponsorRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *BuySponsorRequest) GetTxId() uint32 {
	if x != nil {
		return x.TxId
	}
	return 0
}

func (x *BuySponsorRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type RefundSponsorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	TxId   uint32 `protobuf:"varint,2,opt,name=TxId,proto3" json:"TxId,omitempty"`
}

func (x *RefundSponsorRequest) Reset() {
	*x = RefundSponsorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundSponsorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundSponsorRequest) ProtoMessage() {}

func (x *RefundSponsorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundSponsorRequest.ProtoReflect.Descriptor instead.
func (*RefundSponsorRequest) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{16}
}

func (x *RefundSponsorRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RefundSponsorRequest) GetTxId() uint32 {
	if x != nil {
		return x.TxId
	}
	return 0
}

type CreateCmcDepositNoReqeust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32           `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Info   *CmbDepositNoDto `protobuf:"bytes,2,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateCmcDepositNoReqeust) Reset() {
	*x = CreateCmcDepositNoReqeust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCmcDepositNoReqeust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCmcDepositNoReqeust) ProtoMessage() {}

func (x *CreateCmcDepositNoReqeust) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCmcDepositNoReqeust.ProtoReflect.Descriptor instead.
func (*CreateCmcDepositNoReqeust) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{17}
}

func (x *CreateCmcDepositNoReqeust) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateCmcDepositNoReqeust) GetInfo() *CmbDepositNoDto {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateCmcDepositNoRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32           `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Info   *CmbDepositNoDto `protobuf:"bytes,2,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateCmcDepositNoRelationRequest) Reset() {
	*x = UpdateCmcDepositNoRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCmcDepositNoRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCmcDepositNoRelationRequest) ProtoMessage() {}

func (x *UpdateCmcDepositNoRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCmcDepositNoRelationRequest.ProtoReflect.Descriptor instead.
func (*UpdateCmcDepositNoRelationRequest) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateCmcDepositNoRelationRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateCmcDepositNoRelationRequest) GetInfo() *CmbDepositNoDto {
	if x != nil {
		return x.Info
	}
	return nil
}

type BuyDataBundleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       uint32 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	DataBundleId uint32 `protobuf:"varint,2,opt,name=DataBundleId,proto3" json:"DataBundleId,omitempty"`
	Count        uint32 `protobuf:"varint,4,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *BuyDataBundleRequest) Reset() {
	*x = BuyDataBundleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyDataBundleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyDataBundleRequest) ProtoMessage() {}

func (x *BuyDataBundleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyDataBundleRequest.ProtoReflect.Descriptor instead.
func (*BuyDataBundleRequest) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{19}
}

func (x *BuyDataBundleRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BuyDataBundleRequest) GetDataBundleId() uint32 {
	if x != nil {
		return x.DataBundleId
	}
	return 0
}

func (x *BuyDataBundleRequest) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type UserDataBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserId       uint32 `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	DataBundleId uint32 `protobuf:"varint,3,opt,name=DataBundleId,proto3" json:"DataBundleId,omitempty"`
	Count        uint32 `protobuf:"varint,4,opt,name=Count,proto3" json:"Count,omitempty"`
	BoughtTime   string `protobuf:"bytes,5,opt,name=BoughtTime,proto3" json:"BoughtTime,omitempty"`
}

func (x *UserDataBundle) Reset() {
	*x = UserDataBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataBundle) ProtoMessage() {}

func (x *UserDataBundle) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataBundle.ProtoReflect.Descriptor instead.
func (*UserDataBundle) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{20}
}

func (x *UserDataBundle) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UserDataBundle) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserDataBundle) GetDataBundleId() uint32 {
	if x != nil {
		return x.DataBundleId
	}
	return 0
}

func (x *UserDataBundle) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UserDataBundle) GetBoughtTime() string {
	if x != nil {
		return x.BoughtTime
	}
	return ""
}

type BuyBillPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        uint32 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PlanId        uint32 `protobuf:"varint,2,opt,name=PlanId,proto3" json:"PlanId,omitempty"`
	IsAutoRenewal bool   `protobuf:"varint,3,opt,name=IsAutoRenewal,proto3" json:"IsAutoRenewal,omitempty"`
}

func (x *BuyBillPlanRequest) Reset() {
	*x = BuyBillPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyBillPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyBillPlanRequest) ProtoMessage() {}

func (x *BuyBillPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyBillPlanRequest.ProtoReflect.Descriptor instead.
func (*BuyBillPlanRequest) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{21}
}

func (x *BuyBillPlanRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BuyBillPlanRequest) GetPlanId() uint32 {
	if x != nil {
		return x.PlanId
	}
	return 0
}

func (x *BuyBillPlanRequest) GetIsAutoRenewal() bool {
	if x != nil {
		return x.IsAutoRenewal
	}
	return false
}

type UerBillPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserId        uint32 `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PlanId        uint32 `protobuf:"varint,3,opt,name=PlanId,proto3" json:"PlanId,omitempty"`
	BoughtTime    string `protobuf:"bytes,4,opt,name=BoughtTime,proto3" json:"BoughtTime,omitempty"`
	IsAutoRenewal bool   `protobuf:"varint,5,opt,name=IsAutoRenewal,proto3" json:"IsAutoRenewal,omitempty"`
}

func (x *UerBillPlan) Reset() {
	*x = UerBillPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UerBillPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UerBillPlan) ProtoMessage() {}

func (x *UerBillPlan) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UerBillPlan.ProtoReflect.Descriptor instead.
func (*UerBillPlan) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{22}
}

func (x *UerBillPlan) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UerBillPlan) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UerBillPlan) GetPlanId() uint32 {
	if x != nil {
		return x.PlanId
	}
	return 0
}

func (x *UerBillPlan) GetBoughtTime() string {
	if x != nil {
		return x.BoughtTime
	}
	return ""
}

func (x *UerBillPlan) GetIsAutoRenewal() bool {
	if x != nil {
		return x.IsAutoRenewal
	}
	return false
}

type UpdateUpdateBillPlanRenewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        uint32 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ServerType    uint32 `protobuf:"varint,2,opt,name=ServerType,proto3" json:"ServerType,omitempty"`
	IsAutoRenewal bool   `protobuf:"varint,3,opt,name=IsAutoRenewal,proto3" json:"IsAutoRenewal,omitempty"`
}

func (x *UpdateUpdateBillPlanRenewRequest) Reset() {
	*x = UpdateUpdateBillPlanRenewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUpdateBillPlanRenewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUpdateBillPlanRenewRequest) ProtoMessage() {}

func (x *UpdateUpdateBillPlanRenewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUpdateBillPlanRenewRequest.ProtoReflect.Descriptor instead.
func (*UpdateUpdateBillPlanRenewRequest) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateUpdateBillPlanRenewRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUpdateBillPlanRenewRequest) GetServerType() uint32 {
	if x != nil {
		return x.ServerType
	}
	return 0
}

func (x *UpdateUpdateBillPlanRenewRequest) GetIsAutoRenewal() bool {
	if x != nil {
		return x.IsAutoRenewal
	}
	return false
}

type QueryRecentCmbHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ModelsCmbRecord `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
}

func (x *QueryRecentCmbHistoryResponse) Reset() {
	*x = QueryRecentCmbHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settle_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRecentCmbHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRecentCmbHistoryResponse) ProtoMessage() {}

func (x *QueryRecentCmbHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settle_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRecentCmbHistoryResponse.ProtoReflect.Descriptor instead.
func (*QueryRecentCmbHistoryResponse) Descriptor() ([]byte, []int) {
	return file_settle_proto_rawDescGZIP(), []int{24}
}

func (x *QueryRecentCmbHistoryResponse) GetList() []*ModelsCmbRecord {
	if x != nil {
		return x.List
	}
	return nil
}

var File_settle_proto protoreflect.FileDescriptor

var file_settle_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x22, 0x07, 0x0a,
	0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x7f, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x72, 0x72, 0x65, 0x61,
	0x72, 0x73, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x41,
	0x72, 0x72, 0x65, 0x61, 0x72, 0x73, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x66, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x43,
	0x66, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x70, 0x69, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x12, 0x3d, 0x0a, 0x05, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62,
	0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x69,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x55, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f,
	0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x69, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x88, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x69, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c,
	0x6c, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x22, 0xf5, 0x01, 0x0a, 0x07, 0x57,
	0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x07, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x43, 0x6f, 0x64, 0x65, 0x55,
	0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x48, 0x35, 0x55, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x48, 0x35, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x07, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12,
	0x29, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04,
	0x52, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x48, 0x35, 0x55, 0x72, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e,
	0x6f, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x22, 0xca, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x4d,
	0x65, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x22,
	0x20, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x14, 0x0a, 0x02, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x0f, 0x43, 0x6d, 0x62, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x4e, 0x6f, 0x44, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x42, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42, 0x61,
	0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x22, 0xac, 0x01, 0x0a, 0x0c, 0x43,
	0x6d, 0x62, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4e, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x12,
	0x22, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6d, 0x62, 0x4e, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x43, 0x6d, 0x62, 0x4e, 0x6f, 0x22, 0x62, 0x0a, 0x0e, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8e, 0x05,
	0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x43, 0x6d, 0x62, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x1b, 0x0a, 0x06, 0x41, 0x63, 0x63, 0x4e, 0x62, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x06, 0x41, 0x63, 0x63, 0x4e, 0x62, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x41, 0x75, 0x74, 0x46, 0x6c, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x06, 0x41, 0x75, 0x74, 0x46, 0x6c, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x43,
	0x63, 0x79, 0x4e, 0x62, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x43,
	0x63, 0x79, 0x4e, 0x62, 0x72, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x44,
	0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x44,
	0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x44, 0x6d, 0x61, 0x4e,
	0x62, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x44, 0x6d, 0x61, 0x4e,
	0x62, 0x72, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x06, 0x52, 0x02, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x4e, 0x61,
	0x72, 0x49, 0x6e, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x06, 0x4e, 0x61,
	0x72, 0x49, 0x6e, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x52, 0x70, 0x79, 0x41, 0x63,
	0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x06, 0x52, 0x70, 0x79, 0x41, 0x63,
	0x63, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x52, 0x70, 0x79, 0x4e, 0x61, 0x6d, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x06, 0x52, 0x70, 0x79, 0x4e, 0x61, 0x6d, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x54, 0x72, 0x78, 0x41, 0x6d, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x02, 0x48, 0x0a, 0x52, 0x06, 0x54, 0x72, 0x78, 0x41, 0x6d, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x54, 0x72, 0x78, 0x44, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b,
	0x52, 0x06, 0x54, 0x72, 0x78, 0x44, 0x61, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x54,
	0x72, 0x78, 0x44, 0x69, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x06, 0x54,
	0x72, 0x78, 0x44, 0x69, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x54, 0x72, 0x78, 0x4e,
	0x62, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x06, 0x54, 0x72, 0x78, 0x4e,
	0x62, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x54, 0x72, 0x78, 0x54, 0x69, 0x6d, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x06, 0x54, 0x72, 0x78, 0x54, 0x69, 0x6d, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x54, 0x72, 0x78, 0x54, 0x78, 0x74, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0f, 0x52, 0x06, 0x54, 0x72, 0x78, 0x54, 0x78, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x41, 0x63, 0x63, 0x4e, 0x62, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x41,
	0x75, 0x74, 0x46, 0x6c, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x43, 0x63, 0x79, 0x4e, 0x62, 0x72,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x44, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x44, 0x6d,
	0x61, 0x4e, 0x62, 0x72, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x4e, 0x61, 0x72, 0x49, 0x6e, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x52, 0x70, 0x79, 0x41, 0x63,
	0x63, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x52, 0x70, 0x79, 0x4e, 0x61, 0x6d, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x54, 0x72, 0x78, 0x41, 0x6d, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x54, 0x72, 0x78, 0x44,
	0x61, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x54, 0x72, 0x78, 0x44, 0x69, 0x72, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x54, 0x72, 0x78, 0x4e, 0x62, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x54, 0x72, 0x78,
	0x54, 0x69, 0x6d, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x54, 0x72, 0x78, 0x54, 0x78, 0x74, 0x22, 0x3a,
	0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x20, 0x0a, 0x0e, 0x57, 0x78,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x5f, 0x0a, 0x13,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43,
	0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x71, 0x0a,
	0x11, 0x42, 0x75, 0x79, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x78, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x54, 0x78, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x42, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x78, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x54, 0x78, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6d,
	0x63, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x65, 0x75, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f,
	0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x43, 0x6d, 0x62, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x4e, 0x6f, 0x44, 0x74, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6f, 0x0a,
	0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6d, 0x63, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x4e, 0x6f, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62,
	0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x43, 0x6d, 0x62, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x4e, 0x6f, 0x44, 0x74, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x68,
	0x0a, 0x14, 0x42, 0x75, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x42, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x42, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6a, 0x0a,
	0x12, 0x42, 0x75, 0x79, 0x42, 0x69, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x50,
	0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x50, 0x6c, 0x61,
	0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e,
	0x65, 0x77, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x41, 0x75,
	0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c, 0x22, 0x93, 0x01, 0x0a, 0x0b, 0x55, 0x65,
	0x72, 0x42, 0x69, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x6f, 0x75,
	0x67, 0x68, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42,
	0x6f, 0x75, 0x67, 0x68, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x41,
	0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c, 0x22,
	0x80, 0x01, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x69, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77,
	0x61, 0x6c, 0x22, 0x53, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x43, 0x6d, 0x62, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x43, 0x6d, 0x62, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xde, 0x08, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x12, 0x1d,
	0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x57, 0x78,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x72, 0x61, 0x69, 0x6e,
	0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x49, 0x44, 0x1a, 0x1b, 0x2e, 0x72,
	0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x06, 0x42, 0x75, 0x79,
	0x47, 0x61, 0x73, 0x12, 0x20, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x42, 0x75, 0x79, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x0a, 0x42,
	0x75, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x72, 0x61, 0x69, 0x6e,
	0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x42, 0x75, 0x79, 0x53, 0x70, 0x6f,
	0x6e, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x72, 0x61,
	0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x53, 0x0a, 0x0d, 0x42, 0x75, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x23, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x2e, 0x42, 0x75, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f,
	0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x42, 0x75, 0x79, 0x42, 0x69, 0x6c,
	0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x21, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x42, 0x75, 0x79, 0x42, 0x69, 0x6c, 0x6c, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62,
	0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x55, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c,
	0x50, 0x6c, 0x61, 0x6e, 0x12, 0x62, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x69,
	0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x12, 0x2f, 0x2e, 0x72, 0x61,
	0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72,
	0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x55, 0x65, 0x72,
	0x42, 0x69, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x4a, 0x0a, 0x0d, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x12, 0x23, 0x2e, 0x72, 0x61, 0x69, 0x6e,
	0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x70,
	0x69, 0x46, 0x65, 0x65, 0x12, 0x22, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x46, 0x65,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62,
	0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x15, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x1a, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f,
	0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6d, 0x63,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4e, 0x6f, 0x12, 0x28, 0x2e, 0x72, 0x61, 0x69, 0x6e,
	0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6d, 0x63, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x65,
	0x75, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x43, 0x6d, 0x63, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4e, 0x6f, 0x12, 0x15, 0x2e, 0x72,
	0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x1a, 0x1b, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x43, 0x6d, 0x62, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4e, 0x6f,
	0x12, 0x60, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43,
	0x6d, 0x62, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x19, 0x2e, 0x72, 0x61, 0x69, 0x6e,
	0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x2c, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x43, 0x6d, 0x62, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x64, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6d, 0x63, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4e, 0x6f, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x30, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6d, 0x63, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x4e, 0x6f, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x66, 0x74, 0x2d, 0x72, 0x61, 0x69, 0x6e, 0x62,
	0x6f, 0x77, 0x2f, 0x72, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x2d, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_settle_proto_rawDescOnce sync.Once
	file_settle_proto_rawDescData = file_settle_proto_rawDesc
)

func file_settle_proto_rawDescGZIP() []byte {
	file_settle_proto_rawDescOnce.Do(func() {
		file_settle_proto_rawDescData = protoimpl.X.CompressGZIP(file_settle_proto_rawDescData)
	})
	return file_settle_proto_rawDescData
}

var file_settle_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_settle_proto_goTypes = []interface{}{
	(*Empty)(nil),                             // 0: rainbowsettle.Empty
	(*UserBalance)(nil),                       // 1: rainbowsettle.UserBalance
	(*UserApiQuotas)(nil),                     // 2: rainbowsettle.UserApiQuotas
	(*UserApiQuota)(nil),                      // 3: rainbowsettle.UserApiQuota
	(*WxOrder)(nil),                           // 4: rainbowsettle.WxOrder
	(*DepositOrder)(nil),                      // 5: rainbowsettle.DepositOrder
	(*UserID)(nil),                            // 6: rainbowsettle.UserID
	(*ID)(nil),                                // 7: rainbowsettle.ID
	(*CmbDepositNoDto)(nil),                   // 8: rainbowsettle.CmbDepositNoDto
	(*CmbDepositNo)(nil),                      // 9: rainbowsettle.CmbDepositNo
	(*DepositRequest)(nil),                    // 10: rainbowsettle.DepositRequest
	(*ModelsCmbRecord)(nil),                   // 11: rainbowsettle.ModelsCmbRecord
	(*Pagenation)(nil),                        // 12: rainbowsettle.Pagenation
	(*WxOrderRequest)(nil),                    // 13: rainbowsettle.WxOrderRequest
	(*RefundApiFeeRequest)(nil),               // 14: rainbowsettle.RefundApiFeeRequest
	(*BuySponsorRequest)(nil),                 // 15: rainbowsettle.BuySponsorRequest
	(*RefundSponsorRequest)(nil),              // 16: rainbowsettle.RefundSponsorRequest
	(*CreateCmcDepositNoReqeust)(nil),         // 17: rainbowsettle.CreateCmcDepositNoReqeust
	(*UpdateCmcDepositNoRelationRequest)(nil), // 18: rainbowsettle.UpdateCmcDepositNoRelationRequest
	(*BuyDataBundleRequest)(nil),              // 19: rainbowsettle.BuyDataBundleRequest
	(*UserDataBundle)(nil),                    // 20: rainbowsettle.UserDataBundle
	(*BuyBillPlanRequest)(nil),                // 21: rainbowsettle.BuyBillPlanRequest
	(*UerBillPlan)(nil),                       // 22: rainbowsettle.UerBillPlan
	(*UpdateUpdateBillPlanRenewRequest)(nil),  // 23: rainbowsettle.UpdateUpdateBillPlanRenewRequest
	(*QueryRecentCmbHistoryResponse)(nil),     // 24: rainbowsettle.QueryRecentCmbHistoryResponse
	nil,                                       // 25: rainbowsettle.UserApiQuotas.ItemsEntry
}
var file_settle_proto_depIdxs = []int32{
	25, // 0: rainbowsettle.UserApiQuotas.Items:type_name -> rainbowsettle.UserApiQuotas.ItemsEntry
	8,  // 1: rainbowsettle.CreateCmcDepositNoReqeust.Info:type_name -> rainbowsettle.CmbDepositNoDto
	8,  // 2: rainbowsettle.UpdateCmcDepositNoRelationRequest.Info:type_name -> rainbowsettle.CmbDepositNoDto
	11, // 3: rainbowsettle.QueryRecentCmbHistoryResponse.List:type_name -> rainbowsettle.ModelsCmbRecord
	3,  // 4: rainbowsettle.UserApiQuotas.ItemsEntry.value:type_name -> rainbowsettle.UserApiQuota
	10, // 5: rainbowsettle.Settle.Deposite:input_type -> rainbowsettle.DepositRequest
	7,  // 6: rainbowsettle.Settle.GetDepositeOrder:input_type -> rainbowsettle.ID
	15, // 7: rainbowsettle.Settle.BuyGas:input_type -> rainbowsettle.BuySponsorRequest
	15, // 8: rainbowsettle.Settle.BuyStorage:input_type -> rainbowsettle.BuySponsorRequest
	19, // 9: rainbowsettle.Settle.BuyDataBundle:input_type -> rainbowsettle.BuyDataBundleRequest
	21, // 10: rainbowsettle.Settle.BuyBillPlan:input_type -> rainbowsettle.BuyBillPlanRequest
	23, // 11: rainbowsettle.Settle.UpdateBillPlanRenew:input_type -> rainbowsettle.UpdateUpdateBillPlanRenewRequest
	16, // 12: rainbowsettle.Settle.RefundSponsor:input_type -> rainbowsettle.RefundSponsorRequest
	14, // 13: rainbowsettle.Settle.RefundApiFee:input_type -> rainbowsettle.RefundApiFeeRequest
	6,  // 14: rainbowsettle.Settle.GetUserBalance:input_type -> rainbowsettle.UserID
	17, // 15: rainbowsettle.Settle.CreateCmcDepositNo:input_type -> rainbowsettle.CreateCmcDepositNoReqeust
	6,  // 16: rainbowsettle.Settle.GetCmcDepositNo:input_type -> rainbowsettle.UserID
	12, // 17: rainbowsettle.Settle.QueryRecentCmbHistory:input_type -> rainbowsettle.Pagenation
	18, // 18: rainbowsettle.Settle.UpdateCmcDepositNoRelation:input_type -> rainbowsettle.UpdateCmcDepositNoRelationRequest
	4,  // 19: rainbowsettle.Settle.Deposite:output_type -> rainbowsettle.WxOrder
	5,  // 20: rainbowsettle.Settle.GetDepositeOrder:output_type -> rainbowsettle.DepositOrder
	0,  // 21: rainbowsettle.Settle.BuyGas:output_type -> rainbowsettle.Empty
	0,  // 22: rainbowsettle.Settle.BuyStorage:output_type -> rainbowsettle.Empty
	20, // 23: rainbowsettle.Settle.BuyDataBundle:output_type -> rainbowsettle.UserDataBundle
	22, // 24: rainbowsettle.Settle.BuyBillPlan:output_type -> rainbowsettle.UerBillPlan
	22, // 25: rainbowsettle.Settle.UpdateBillPlanRenew:output_type -> rainbowsettle.UerBillPlan
	0,  // 26: rainbowsettle.Settle.RefundSponsor:output_type -> rainbowsettle.Empty
	0,  // 27: rainbowsettle.Settle.RefundApiFee:output_type -> rainbowsettle.Empty
	1,  // 28: rainbowsettle.Settle.GetUserBalance:output_type -> rainbowsettle.UserBalance
	0,  // 29: rainbowsettle.Settle.CreateCmcDepositNo:output_type -> rainbowsettle.Empty
	9,  // 30: rainbowsettle.Settle.GetCmcDepositNo:output_type -> rainbowsettle.CmbDepositNo
	24, // 31: rainbowsettle.Settle.QueryRecentCmbHistory:output_type -> rainbowsettle.QueryRecentCmbHistoryResponse
	0,  // 32: rainbowsettle.Settle.UpdateCmcDepositNoRelation:output_type -> rainbowsettle.Empty
	19, // [19:33] is the sub-list for method output_type
	5,  // [5:19] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_settle_proto_init() }
func file_settle_proto_init() {
	if File_settle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_settle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserApiQuotas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserApiQuota); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmbDepositNoDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmbDepositNo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelsCmbRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagenation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundApiFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuySponsorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundSponsorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCmcDepositNoReqeust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCmcDepositNoRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyDataBundleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDataBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyBillPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UerBillPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUpdateBillPlanRenewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settle_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRecentCmbHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_settle_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_settle_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_settle_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_settle_proto_goTypes,
		DependencyIndexes: file_settle_proto_depIdxs,
		MessageInfos:      file_settle_proto_msgTypes,
	}.Build()
	File_settle_proto = out.File
	file_settle_proto_rawDesc = nil
	file_settle_proto_goTypes = nil
	file_settle_proto_depIdxs = nil
}
